## Setup git config once for all tests
exec git config --global user.name "Test"
exec git config --global user.email "test@example.com"
exec git config --global commit.gpgsign false

## Help and basic functionality

# Test init convert command help
exec grove init convert --help
stdout 'Convert existing Git repository to a grove workspace'
stdout 'Usage:'
stdout '--branches'

## Argument validation

# Test init convert with no positional arguments
! exec grove init convert arg1
stderr 'unknown command'

## Pre-condition validation (in check order)

# Test init convert fails when not a git repository
mkdir not-git-repo
cd not-git-repo
! exec grove init convert
stderr 'not a git repository'
cd ..

# Test init convert fails when already grove workspace
mkdir already-grove
exec grove init new already-grove
cd already-grove
! exec grove init convert
stderr 'already a grove workspace'
cd ..

# Test init convert fails when repository is a worktree
mkdir convert-worktree-main
cd convert-worktree-main
exec git init
cp ../test-file.txt .
exec git add .
exec git commit -m 'initial commit'
exec git worktree add ../convert-worktree-feature feature
cd ../convert-worktree-feature
! exec grove init convert
stderr 'cannot convert: repository is a worktree'
cd ..

# Test init convert with detached HEAD fails
mkdir convert-detached
cd convert-detached
exec git init
cp ../test-file.txt .
exec git add .
exec git commit -m 'initial commit'
exec git checkout HEAD~0
! exec grove init convert
stderr 'cannot convert: repository is in detached HEAD state'
cd ..

# Test init convert with uncommitted changes fails
mkdir convert-uncommitted
cd convert-uncommitted
exec git init
cp ../test-file.txt .
exec git add .
exec git commit -m 'initial commit'
cp ../untracked.txt .
! exec grove init convert
stderr 'cannot convert: repository has uncommitted changes'
cd ..

# Test init convert fails when repository has existing worktrees
mkdir convert-has-worktrees
cd convert-has-worktrees
exec git init
cp ../test-file.txt .
exec git add .
exec git commit -m 'initial commit'
exec git worktree add ../feature-worktree feature
! exec grove init convert
stderr 'cannot convert: repository has existing worktrees'
cd ..

# Test init convert fails when lock files are present
mkdir convert-lock-files
cd convert-lock-files
exec git init
cp ../test-file.txt .
exec git add .
exec git commit -m 'initial commit'
exec sh -c 'touch .git/index.lock'
! exec grove init convert
stderr 'cannot convert: repository has active lock files'
cd ..

# Test init convert fails when repository has submodules
mkdir convert-submodules
cd convert-submodules
exec git init
cp ../test-file.txt .
exec git add .
exec git commit -m 'initial commit'
cp ../gitmodules .gitmodules
! exec grove init convert
stderr 'cannot convert: repository has submodules'
cd ..

# Test init convert fails when repository has unresolved conflicts
mkdir convert-conflicts
cd convert-conflicts
exec git init
cp ../test-file.txt .
exec git add .
exec git commit -m 'initial commit'
exec sh -c 'touch .git/MERGE_HEAD'
! exec grove init convert
stderr 'cannot convert: repository has unresolved conflicts'
cd ..

# Test init convert fails when repository has ongoing operations
mkdir convert-ongoing
cd convert-ongoing
exec git init
cp ../test-file.txt .
exec git add .
exec git commit -m 'initial commit'
exec sh -c 'touch .git/MERGE_HEAD'
! exec grove init convert
stderr 'cannot convert: repository has ongoing merge/rebase/cherry-pick'
cd ..

# Test init convert fails when repository has unpushed commits
# mkdir convert-unpushed
# cd convert-unpushed
# exec git init
# exec git config user.name "Test"
# exec git config user.email "test@example.com"
# exec git config commit.gpgsign false
# cp ../test-file.txt .
# exec git add .
# exec git commit -m 'initial commit'
# exec git remote add origin https://github.com/fake/repo.git
# exec git branch --set-upstream-to=origin/main main
# cp ../test-file2.txt .
# exec git add .
# exec git commit -m 'unpushed commit'
# ! exec grove init convert
# stderr 'cannot convert: repository has unpushed commits'
# cd ..

-- test-file.txt --
This is a test file

-- untracked.txt --
This file is untracked

-- test-file2.txt --
This is another test file

-- gitmodules --
[submodule "sub"]
	path = sub
	url = ../sub
