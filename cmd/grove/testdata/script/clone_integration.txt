# Setup git config once
exec git config --global user.name "Test"
exec git config --global user.email "test@example.com"
exec git config --global commit.gpgsign false

# Setup test repository fixture
mkdir testrepo
exec git init testrepo
cd testrepo
cp ../README.md .
exec git add .
exec git commit -m 'initial commit'
exec git checkout -b develop
cd ..

## Success paths

# Test successful clone with branches
mkdir clone-with-branches
exec grove clone file://$WORK/testrepo clone-with-branches --branches main,develop
stdout 'Initialized grove workspace'
stdout 'clone-with-branches'
exists clone-with-branches/.bare
exists clone-with-branches/.git
exists clone-with-branches/main
exists clone-with-branches/develop
exists clone-with-branches/main/README.md
exists clone-with-branches/develop/README.md

## Output format tests

# Test clone output shows worktree creation by default (quiet mode)
mkdir clone-quiet-output
exec grove clone file://$WORK/testrepo clone-quiet-output --branches main,develop
stdout 'Cloning repository...'
stdout 'Repository cloned'
stdout 'Creating worktrees'
stdout '✓ main'
stdout '✓ develop'
stdout 'Initialized grove workspace'
stdout 'clone-quiet-output'
! stdout 'Enumerating objects'
! stdout 'Counting objects'
! stdout 'Compressing objects'
! stdout 'Receiving objects'

# Test clone with branch name sanitization output
cd testrepo
exec git checkout -b feat/user-auth
cd ..
mkdir clone-sanitize-branches
exec grove clone file://$WORK/testrepo clone-sanitize-branches --branches feat/user-auth
stdout 'Creating worktrees'
stdout '✓ feat-user-auth'
stdout 'Initialized grove workspace'
stdout 'clone-sanitize-branches'
exists clone-sanitize-branches/feat-user-auth

# Test clone with --verbose flag shows git output
mkdir clone-verbose-output
exec grove clone file://$WORK/testrepo clone-verbose-output --branches main --verbose
stdout 'Creating worktrees'
stdout '✓ main'
stdout 'Initialized grove workspace'
stdout 'clone-verbose-output'
# Note: Can't test git verbose output in script tests as it's environment dependent

# Test clone error output remains visible in quiet mode
mkdir clone-error-output
! exec grove clone file:///nonexistent/repo.git clone-error-output
stderr 'failed to clone repository'

## Branch validation with real repository

# Test init clone with invalid branch names
mkdir clone-invalid-branch
! exec grove clone file://$WORK/testrepo clone-invalid-branch --branches "nonexistent"
stderr 'failed to create worktree for branch'
stderr 'nonexistent'
stderr 'invalid reference'

-- README.md --
# Test Repository
This is a test repository for grove.